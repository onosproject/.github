# Copyright 2025 Canonical Ltd.
# Copyright 2025 The Linux Foundation
# SPDX-FileCopyrightText: 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
name: Publish Helm Charts with Umbrella Chart
# Calling workflow should include "secrets: inherit"

on:
  workflow_call:
    inputs:
      charts_repo_url:
        description: "URL for the helm repository to push to"
        required: false
        type: string
        default: https://charts.aetherproject.org
      umbrella_charts:
        description: "Directory containing the umbrella chart(s)"
        required: true
        type: string
      remote_host:
        description: "Address for host to sync charts to"
        required: true
        type: string
      remote_path:
        description: "Path on remote_host where charts should be stored"
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      CHARTS_DIR: charts
      REF_CHARTS_DIR: charts-ref
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: latest

      - name: Get current Index.yaml
        run: |
          rm -rf ${{ env.REF_CHARTS_DIR }} && mkdir -p ${{ env.REF_CHARTS_DIR }}
          curl -o ${{ env.REF_CHARTS_DIR }}/index.yaml ${{ inputs.charts_repo_url }}/index.yaml

      - name: Find all Charts and Package them
        run: |
          rm -rf ${{ env.CHARTS_DIR }} && mkdir -p ${{ env.CHARTS_DIR }}
          for dir in $(find . -maxdepth 1 -mindepth 1 -type d); do
            if [[ -f "$dir/Chart.yaml" ]] && [[ "$dir" != ${{ inputs.umbrella_charts }} ]]; then
              echo "Packaging charts for: $dir"
              helm dependency update "$dir"
              helm package "$dir" --destination ${{ env.CHARTS_DIR }}
            fi
          done
          helm repo index ${{ env.CHARTS_DIR }} --url ${{ inputs.charts_repo_url }} --merge ${{ env.REF_CHARTS_DIR }}/index.yaml

      - name: Remove not "updated" local Charts (version has not changed)
        working-directory: ${{ env.CHARTS_DIR }}
        run: |
          for file in *.tgz; do
            if grep -q "${{ inputs.charts_repo_url }}/$file" "../${{ env.REF_CHARTS_DIR }}/index.yaml"; then
              echo "Not publishing $file because it is already in ${{ inputs.charts_repo_url }}/index.yaml"
              rm $file
            fi
          done

      - name: rsync deployments
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avh
          path: ${{ env.CHARTS_DIR }}/
          remote_path: ${{ inputs.remote_path }}
          remote_host: ${{ inputs.remote_host }}
          remote_user: ${{ secrets.JENKINS_USERNAME }}
          remote_key: ${{ secrets.JENKINS_SSHKEY }}
          remote_key_pass: ${{ secrets.JENKINS_PASSPHRASE }}

      - name: Get current Index.yaml
        run: |
          rm -rf ${{ env.REF_CHARTS_DIR }} && mkdir -p ${{ env.REF_CHARTS_DIR }}
          curl -o ${{ env.REF_CHARTS_DIR }}/index.yaml ${{ inputs.charts_repo_url }}/index.yaml

      - name: Find all Charts and Package them
        run: |
          rm -rf ${{ env.CHARTS_DIR }} && mkdir -p ${{ env.CHARTS_DIR }}
          echo "Packaging charts for: ${{ inputs.umbrella_charts }}"
          helm dependency update "${{ inputs.umbrella_charts }}"
          helm package "${{ inputs.umbrella_charts }}" --destination ${{ env.CHARTS_DIR }}
          helm repo index ${{ env.CHARTS_DIR }} --url ${{ inputs.charts_repo_url }} --merge ${{ env.REF_CHARTS_DIR }}/index.yaml

      - name: rsync deployments
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avh
          path: ${{ env.CHARTS_DIR }}/
          remote_path: ${{ inputs.remote_path }}
          remote_host: ${{ inputs.remote_host }}
          remote_user: ${{ secrets.JENKINS_USERNAME }}
          remote_key: ${{ secrets.JENKINS_SSHKEY }}
          remote_key_pass: ${{ secrets.JENKINS_PASSPHRASE }}
